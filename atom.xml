<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[大小云]]></title>
  <link href="http://blog.daxiaoyun.com/atom.xml" rel="self"/>
  <link href="http://blog.daxiaoyun.com/"/>
  <updated>2015-07-27T00:02:43+08:00</updated>
  <id>http://blog.daxiaoyun.com/</id>
  <author>
    <name><![CDATA[Cool Cloud]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[善用标签管理笔记]]></title>
    <link href="http://blog.daxiaoyun.com/blog/20150726/evernote-tag/"/>
    <updated>2015-07-26T23:30:00+08:00</updated>
    <id>http://blog.daxiaoyun.com/blog/20150726/evernote-tag</id>
    <content type="html"><![CDATA[<p><img src="http://blog.daxiaoyun.com/images/my/evernote/tag.png" /></p>

<h2 id="section">善用快捷方式</h2>

<p>可以把标签和笔记本添加到快捷方式，之前只知道添加笔记，刚才创建了一个 ReadItLater 标签，把稍后阅读的文章都打上标签，读完之后去掉标签，很容易管理</p>

<h3 id="section-1">使用剪藏设置标签</h3>

<p>通过 chrome 剪藏保存笔记时，如果需要稍后阅读记得打上标签 ReadItLater</p>

<h3 id="section-2">搜狗输入法技巧</h3>

<p>ReadItLater 搜狗输入法完整地输入一遍，便于直接打出来，还是需要输入 ReadItL 才能出来。</p>

<h2 id="section-3">我的常用标签</h2>

<h3 id="skill-tag">Skill tag</h3>

<p>创建了 Skill（技巧）标签，用于之后把各种技巧都打上标签，比如：</p>

<pre><code>1. 印象笔记技巧
2. python 技巧
3. Git 技巧
4. EA 技巧
5. iPhone 技巧
6. omnioutliner 技巧
</code></pre>

<p>加了个 tab 之后，上面的列表以代码块的方式展现出来，挺美的。</p>

<p>不断完善技巧，越来越多，都整理在一起，便于回顾复习，温故而知新，当你能真正用上了，它才属于你。像看文章一样，快餐阅读很浪费时间和心力，要深度阅读，反复阅读，直到深入骨髓（有点夸张，不过最好能成为自己能消化的东西）</p>

<h3 id="account-tag">Account Tag</h3>

<p>重要信息，账号信息打上 Account 标签，让我的快捷方式更少，检查的时间更短，效率更高</p>

<h3 id="readitlater">ReadItLater</h3>

<p>之前我是放在一篇文章里，记录标题和链接，感觉比较费劲，看完之后还要修改内容，设置 tag  很轻量，让我想到了 Git 的 tag。</p>

<h3 id="haoguihua">HaoGuiHua</h3>

<p>工作的 tag</p>

<p>另外，总是使用搜索来找到标签，太多了。</p>

<p><strong>计划每天完成一篇，周末写一篇，周末尽量完成一篇长文。从下周开始，不拖延。</strong></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[外婆的园子]]></title>
    <link href="http://blog.daxiaoyun.com/blog/20150724/grandmother-garden/"/>
    <updated>2015-07-24T00:40:00+08:00</updated>
    <id>http://blog.daxiaoyun.com/blog/20150724/grandmother-garden</id>
    <content type="html"><![CDATA[<p>下班前姐夫邮件发给我远远的获奖征文，邮件标题“远的获奖征文（临县举办的）”，仔细读了一篇，很受触动，又反复看了两遍，很酸楚，之后发给我老婆，邮件回复了姐夫，抄送了老婆和远远：</p>

<p>远远写的太好了，很生动，很有深度，让我陷入了深深的回忆中。
让母亲过一个快乐的晚年，但怎么才算是快乐的生活呢？</p>

<p>我十一回家，我现在也只能常回家看望一下她以抚平我的愧疚，争取房子到手能接她过来住一段时间。</p>

<p>我刚提了要接她过来，她说还有地要种，不愿离开，前几天下冰雹，庄稼被打了，我也不能帮上什么忙。</p>

<p>在母亲的经营下都是那么的有声有色，我很欣慰和难过。</p>

<p>我要把远远的话读给她听，妈妈，我爱你。</p>

<blockquote>
  <p>看着就有那么一股劲，有一种沁人心脾的舒坦</p>
</blockquote>

<p>以下是远远的原文，来自最最聪明懂事的外甥马憧远：</p>

<p>去年暮夏，我们一家人来到外婆家看望她。</p>

<p>一走进院子里，我就感觉一股大自然的清香扑面而来——这三分大的院子被分成了两部分，玉米、豆角、西红柿、茄子等等蔬菜都在其中占有“一席之地”，除了那耀眼的绿之外，五彩缤纷的颜色让人食欲大增。由于菜地边的墙有一个缺口，而墙外就是一大片翠绿的田野，所以沿着菜地看出去，就像是菜地的绿一不小心倾泄出去了一样，染绿了一大片原野。</p>

<p>很难想象出来，这是一位一年前在医院里待了很长时间的六十多岁的老人种出来的……</p>

<p>前年夏天，外婆带着小孙子回故乡探亲。他们在去老舅家串门时，她三岁的小孙子和一个同龄小朋友在床上打闹，外婆正坐在床边。她怕两个孩子受了伤，想挪去他们身边，却因为床单太滑，她又太着急，导致的反作用力让她掉在了地上，大腿意外骨折了。她躺在医院的病床上时，大家心头都压着一片灰色，大片大片、令人心碎的灰色。当我们终于请来了外地的名医给她做手术时，她还在坚强地微笑着，安慰着我们。手术过后，外婆曾因为不想被别人伺候而自己扶着墙去上厕所，直到后来医生为这个发了一通火，她才罢休。出院后，她执意要回老家，我们拗不过她，只能顺从。</p>

<p>她回到很多年没整修过的家，先把院子里的杂草清理干净，又种上种子，准备好好地种蔬菜、粮食。在这个过程中，我们都来帮外婆的忙，外婆就跑前跑后地给我们端茶送水，笑着和我们聊天，透露出来的是爽朗的喜悦和开心。我们走后，她又把菜园里的小石子都刨了出来，让菜地变得焕然一新，干净而又整洁。</p>

<p>其实外婆这么要强，很大程度上是来源于她也曾经历过的太多的风雨——</p>

<p>外公还在的时候，他们虽然清贫，但一家人倒也生活得充实而快乐。当他们终于置办好了新家后，田野里却再也见不到外公忙碌的身影了——他疲劳过度，最终病倒了。那时，小舅刚上高二，学习正到了紧要关头，再说外公也不想让他半途而废。那段时间，外婆起早贪黑、披星戴月地一个人下地忙碌着，努力支撑着那个经过风雨洗礼后，早已残破不堪的家。但，外公还是去世了。</p>

<p>再后来，她为了筹备小舅上大学的费用，只身去了外地的一家饭店打工。这一打工就是七、八年，直到后来小舅娶妻生子后，她才结束了自己的“打工生涯”，去照顾自己的小孙子。</p>

<p>“远，快来尝尝外婆种的玉米吧！”思绪飘回了现在，只见外婆正笑着将一根玉米递给我，我接了过来，玉米的香味钻进了鼻孔里。我一边吃着香甜的玉米，一边看着外婆的园子，想着：外婆的园子真美，有一种沁人心脾的舒坦。园子里的玉米杆茂茂的，几乎挡住了整个门窗，所有的绿就像调皮可爱皮实的孩子，看着就有那么一股劲。</p>

<p>哦，外婆的园子！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[进入 Python 世界]]></title>
    <link href="http://blog.daxiaoyun.com/blog/20150722/in-python-world/"/>
    <updated>2015-07-22T23:14:00+08:00</updated>
    <id>http://blog.daxiaoyun.com/blog/20150722/in-python-world</id>
    <content type="html"><![CDATA[<h2 id="section">该怎么开始学习一个完整的项目？</h2>
<p>完整地接触 python 近一个月了，这一个月了，从开始一周学习 python 语法，第二周开始写活动项目，最近再次回过头来完整地熟悉代码结构和业务逻辑，经历了一个完整的起承转合。</p>

<p>大概的学习流程：</p>

<ol>
  <li>看 Python 中文文档，边看文档边做例子，建一个项目 py-study，对于新手还是用 IDE 比较顺手，可以通过提示和自动完成熟悉 Python 语法，我用的是 pycharm，可以在项目里直接调试</li>
  <li>看 Flask 中文文档（项目框架，熟悉主要的语法和库，重点学习一下 blueprint）</li>
  <li>看 Werkzeug 中文文档（web 服务器，快速过一遍）</li>
  <li>开始做项目，看一个现在项目里的例子，照着做，我开始接手一个相对独立的系统，活动系统，设计数据结构，评审讨论，之后开始实施，熟悉工作流程</li>
  <li>写单元测试，很不错的实践</li>
  <li>code review，大神们给建议，指出问题，通过修改经验值倍增</li>
  <li>深挖业务逻辑，这两周的工作，通过了解了大致的工作流程，对 Python 也上手了，可以动手做项目之后，系统地过一遍现有的业务逻辑，对接下来的活动奖励心里有底，返现、返券之类，想了很多办法，也是第一次这么实践（Sublime 很强大，对 md 语法也支持，对一个列表回车时会自动加出序列，比如：我开始输入“1. (需要空格)”，回车之后自动出来第二项，开始没打空格没效果）</li>
  <li>使用 EA 梳理出主要的业务流程，实体和用例</li>
  <li>再回头完善项目</li>
</ol>

<p>一般的做法时带着问题熟悉系统，但是不全面，我这次从头到尾看一遍，遇到一些很有深度的东西如果当时不理解原理，先放一放，记个笔记，之后异步完成找资料学习，不太影响对主线逻辑的梳理。</p>

<h2 id="section-1">记笔记梳理结构</h2>

<p>先上一张图（专门看了 md 插入图片的语法）
<img src="http://blog.daxiaoyun.com/images/my/solar-directory-tree.png" /></p>

<p>这里我做了很多调整(md 使用 tab 能生成嵌套 list)</p>

<ol>
  <li>使用心心多少表示重要程度，一目了然
    <ol>
      <li>一星表示基本不用关心，比如：反馈</li>
      <li>二星表示不重要的功能，很独立，比如：mail</li>
      <li>三星表示一般性，比如：product</li>
      <li>四星表示库代码，比如：oauth</li>
      <li>五星表示最核心和最先要研究的，比如：攒钱和礼券</li>
    </ol>
  </li>
  <li>层级关系
    <ol>
      <li>一个类一级</li>
      <li>属性和常量单独一级</li>
      <li>couchdb 的属性单独一级</li>
    </ol>
  </li>
  <li>直接上代码
    <ol>
      <li>代码颜色高亮更漂亮</li>
      <li>增加必要的注释，便于对逻辑进行梳理</li>
    </ol>
  </li>
  <li>加了一列“表”，把设计到的表名列出来</li>
  <li>遇到不太明白的语法先记下来</li>
</ol>

<p><img src="http://blog.daxiaoyun.com/images/my/outliner-solar-withdraw.png" /></p>

<h3 id="section-2">一些常用的快捷键</h3>
<p>(md 的表格不需要左右 |，很简洁)</p>

<table>
  <tbody>
    <tr>
      <td><strong>功能</strong></td>
      <td><strong>快捷键</strong></td>
    </tr>
    <tr>
      <td>跳转列</td>
      <td>opt+左右</td>
    </tr>
    <tr>
      <td>行内换行</td>
      <td>opt+回车</td>
    </tr>
    <tr>
      <td>在上面插入一行</td>
      <td>shift+回车</td>
    </tr>
    <tr>
      <td>在下面插入一行</td>
      <td>ctrl+回车</td>
    </tr>
    <tr>
      <td>focus</td>
      <td>cmd+shift+f</td>
    </tr>
    <tr>
      <td>取消 focus</td>
      <td>cms+shift+opt+f</td>
    </tr>
    <tr>
      <td>上移</td>
      <td>ctrl+cmd+上</td>
    </tr>
  </tbody>
</table>

<h2 id="section-3">那些生疏的语法</h2>

<p>先记下来，之后再找资料体会，学完之后，放入另外的笔记本或者删除
文件我后来觉得可以用类名取代，通过 pycharm 编辑器查找类很快，记录起来比较方便</p>

<table>
  <tbody>
    <tr>
      <td><strong>名词</strong></td>
      <td><strong>场景</strong></td>
      <td><strong>文件</strong></td>
      <td><strong>代码块</strong></td>
    </tr>
    <tr>
      <td>copy.deepcopy</td>
      <td>Calculator</td>
      <td> </td>
      <td><code>data = copy.deepcopy(self.data)</code></td>
    </tr>
  </tbody>
</table>

<p><img src="http://blog.daxiaoyun.com/images/my/solar-concept.png" /></p>

<p>– 表格的语法有待进一步完善</p>

<p>之后我在写一篇我是怎么使用印象笔记的
还有 EA 的使用成果</p>

<p>先上几张图(学会了图片标签)</p>

<p><img src="http://blog.daxiaoyun.com/images/my/xmind-activity.png" />
<img src="http://blog.daxiaoyun.com/images/my/ea-activity-time.png" />
<img src="http://blog.daxiaoyun.com/images/my/ea-activity-class.png" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 初体验]]></title>
    <link href="http://blog.daxiaoyun.com/blog/20150715/The-first/"/>
    <updated>2015-07-15T12:00:00+08:00</updated>
    <id>http://blog.daxiaoyun.com/blog/20150715/The-first</id>
    <content type="html"><![CDATA[<p>从今天起，做一个写博客的人，坚持写作，记笔记，分享，终于彻底部署博客到 github pages，微信公众号也可以一起发表。</p>

<p>记录生活与工作，学习的技巧和方法，遇到的问题和解决办法，很有趣。</p>

<p>昨天<a href="http://shengmingzhiqing.com/blog/setup-octopress-with-github-pages.html/">Octopress 搭建流程 – Github Pages</a></p>

<p>遇到一个问题</p>

<p>push 总是不成功，添加 rsa 公钥提示，github 提示 key 已经在使用，所以重新生成了一个，需要执行 ssh-add 命令，重启之后不管用了，所以我添加到 ~/.bash_profile 文件里
$ssh-add ~/.ssh/id_rsa_github
这样可以用多个公钥了</p>

<blockquote>
  <p>ssh-add – adds private key identities to the authentication agent</p>
</blockquote>

<p>今天上午<a href="http://shengmingzhiqing.com/blog/octopress-lean-modification-1.html/">Octopress 精益修改</a></p>

<h3 id="section">关于主题</h3>

<p>体验了CleanPress 之后还是用经典主题比较舒服</p>

<h3 id="markdown-">Markdown 解析器</h3>

<p>尝试博主推荐的 <a href="http://kramdown.gettalong.org/syntax.html#tables">kramdown</a>，非常强大，支持LaTeX，下面是一个例子</p>

<script type="math/tex; mode=display">f'\left( x\right) = \lim _{x\rightarrow 0}\dfrac {f\left( x+\Delta x\right) - f\left( x\right)}{\Delta x}</script>

<h3 id="section-1">本地预览</h3>

<blockquote>
  <p>rake preview</p>
</blockquote>

<p>访问：http://localhost:4000/</p>

<h3 id="section-2">发布</h3>

<blockquote>
  <p>rake gen_deploy</p>
</blockquote>

<p>全部命令</p>

<pre><code>clean                     -- clean out caches: .pygments-cache, .gist-cache, .sass-cache
copydot[source,dest]      -- copy dot files for deployment
deploy                    -- default deploy task
gen_deploy                -- generate website and deploy
generate                  -- generate jekyll site
install[theme]            -- initial setup for octopress: copies the default theme into the path of jekyll's generator
integrate                 -- move all stashed posts back into the posts directory, ready for site generation
isolate[filename]         -- move all other posts than the one currently being worked on to a temporary stash location (st
list                      -- list tasks
new_page[filename]        -- create a new page in source/(filename)/index.md
new_post[title]           -- begin a new post in source/_posts
preview                   -- preview the site in a web browser
preview                   -- preview the site in a web browser
push                      -- deploy public directory to github pages
rsync                     -- deploy website via rsync
set_root_dir[dir]         -- update configurations to support publishing to root or sub directory
setup_github_pages[repo]  -- set up _deploy folder and deploy branch for github pages deployment
update_source[theme]      -- move source to source.old, install source theme updates, replace source/_includes/navigation.
update_style[theme]       -- move sass to sass.old, install sass theme updates, replace sass/custom with sass.old/custom
watch                     -- watch the site and regenerate when it changes
</code></pre>

<h3 id="section-3">接下来</h3>

<ul>
  <li>逐渐深入 kramdown 语法</li>
  <li>添加评论插件 disqus</li>
  <li>添加最后修改记录插件，目录插件</li>
  <li>一些学习的代码示例放到 github</li>
  <li>发掘一些更好玩的</li>
</ul>

<p>且行且写且珍惜</p>
]]></content>
  </entry>
  
</feed>
